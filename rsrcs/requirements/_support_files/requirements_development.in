#  DEPENDENCIES / PACKAGES TO LIST.
#  - WHILE in development.
#  - File with format '.in' to compile with 'pip-compile' to get '.txt' file; e.g. '$ pip-compile 'requirements_prod.in'', will produce 'requirements_prod.txt' file.
#    - Ref.: 'https://github.com/jazzband/pip-tools?tab=readme-ov-file#requirements-from-requirementsin'.
#    - Ref.: 'https://pip.pypa.io/en/stable/user_guide/#requirements-files'.
#    - Ref.: 'https://pip.pypa.io/en/stable/reference/requirements-file-format/#requirements-file-format'.
#  - COMMAND FOR REFERENCE: '$ pip-compile 'requirements_dev.in''

#  CONSTRAINTS.
#  - Constraint files to LOCK indirect / transitive dependencies and their versions (if installed).
#    - Ref.: 'https://github.com/jazzband/pip-tools?tab=readme-ov-file#workflow-for-layered-requirements'.
#    - Ref.: 'https://luminousmen.com/post/pip-constraints-files'.
#    - Ref.: 'https://stackoverflow.com/questions/34645821/pip-constraints-files'.
#    - Ref.: 'https://www.reddit.com/r/Python/comments/114vwiv/use_pips_constraints_files_to_manage_your_python/'.
#  - E.g. '--constraint 'requirements_prod.txt''
#
--constraint '../requirements_production.txt'       # Goes up one directory level (with respect to THIS file's location), to root folder.

#  DEPENDENCIES: WHILE DEVELOPING.
#  - For global development; i.e. this and other projects.
#  - Usually requires most recent versions / not pinned.
#  - E.g. 'fastapi'.
#
#  To manage packages: pipreqs and pip-tools.
#  - Ref.: 'https://dev.to/sajidurshajib/best-way-to-create-requirementstxt-5co9'.
#  - Ref.: 'https://stackoverflow.com/questions/31684375/automatically-create-file-requirements-txt/69081814#69081814'.
# pip-tools           #  To create 'requirements' file, including indirect / transitive dependencies; not only direct / main dependencies defined by user.
# pipreqs             #  To create 'requirements' file only from 'import' statements of '.py' files.
# setuptools
# rich[jupyter]       #  If intended to use rich with Jupyter: 'https://rich.readthedocs.io/en/stable/introduction.html#installation'.
# pandas
# numpy
# # copy
# # json

#  DEPENDENCIES: FOR PRODUCTION (PINNED).
#  - AFTER finishing development, to pin versions used.
#  - You get pinned versions: a) after finishing development, and b) after running '$ pip-compile 'requirements_prod.in''.
#  - E.g. 'fastapi==0.112.0'.
#
pip-tools==7.5.0
pipreqs==0.5.0
#  'setuptools' is considered to be unsafe in a requirements file.
rich==14.1.0
pandas==2.3.2
numpy==2.3.3
